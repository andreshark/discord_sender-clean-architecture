// Mocks generated by Mockito 5.4.4 from annotations
// in discord_sender/test/features/discord_sender/data/repository/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:discord_sender/features/discord_sender/data/data_sources/remote/keyauth_api_service.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [KeyauthApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeyauthApiService extends _i1.Mock implements _i3.KeyauthApiService {
  MockKeyauthApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<dynamic>> init({
    required String? version,
    required String? name,
    required String? ownerId,
    required String? checksum,
    required String? sentKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {
            #version: version,
            #name: name,
            #ownerId: ownerId,
            #checksum: checksum,
            #sentKey: sentKey,
          },
        ),
        returnValue: _i4.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #init,
            [],
            {
              #version: version,
              #name: name,
              #ownerId: ownerId,
              #checksum: checksum,
              #sentKey: sentKey,
            },
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i4.Future<_i2.HttpResponse<dynamic>> checkLicense({
    required String? key,
    required String? hwid,
    required String? session,
    required String? name,
    required String? ownerId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLicense,
          [],
          {
            #key: key,
            #hwid: hwid,
            #session: session,
            #name: name,
            #ownerId: ownerId,
          },
        ),
        returnValue: _i4.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #checkLicense,
            [],
            {
              #key: key,
              #hwid: hwid,
              #session: session,
              #name: name,
              #ownerId: ownerId,
            },
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i4.Future<_i2.HttpResponse<dynamic>> checkSession({
    required String? session,
    required String? name,
    required String? ownerId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkSession,
          [],
          {
            #session: session,
            #name: name,
            #ownerId: ownerId,
          },
        ),
        returnValue: _i4.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #checkSession,
            [],
            {
              #session: session,
              #name: name,
              #ownerId: ownerId,
            },
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i4.Future<_i2.HttpResponse<dynamic>> closeSession({
    required String? session,
    required String? name,
    required String? ownerId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #closeSession,
          [],
          {
            #session: session,
            #name: name,
            #ownerId: ownerId,
          },
        ),
        returnValue: _i4.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #closeSession,
            [],
            {
              #session: session,
              #name: name,
              #ownerId: ownerId,
            },
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<dynamic>>);
}
